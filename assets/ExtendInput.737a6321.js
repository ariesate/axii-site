import{a as e,M as n,g as t,h as o,P as l,c as a}from"./vendor.0cdd2c30.js";!function(e=".",n="__import__"){try{self[n]=new Function("u","return import(u)")}catch(t){const o=new URL(e,location),l=e=>{URL.revokeObjectURL(e.src),e.remove()};self[n]=e=>new Promise(((t,a)=>{const u=new URL(e,o);if(self[n].moduleMap[u])return t(self[n].moduleMap[u]);const r=new Blob([`import * as m from '${u}';`,`${n}.moduleMap['${u}']=m;`],{type:"text/javascript"}),i=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(r),onerror(){a(new Error(`Failed to import: ${e}`)),l(i)},onload(){t(self[n].moduleMap[u]),l(i)}});document.head.appendChild(i)})),self[n].moduleMap={}}}("/assets/");function u(){const o=e(""),l=e(""),a=n((()=>o.value||l.value?`${o.value}-${l.value}`:"please enter your name"));return t("div",null,t("input",{value:o,placeholder:"firstName",onInput:e=>{o.value=e.target.value}}),t("input",{value:l,placeholder:"lastName",onInput:e=>{l.value=e.target.value}}),t("div",null,"Hello, ",a,"."))}var r="/** @jsx createElement */\nimport { createElement, atom, computed } from 'axii'\n\nexport default function Basic() {\n  const firstName = atom('')\n  const lastName = atom('')\n  const fullName = computed(() => {\n    if (!firstName.value && !lastName.value) return 'please enter your name'\n    return `${firstName.value}-${lastName.value}`\n  })\n\n  const setFirstName = (e) => {\n    firstName.value = e.target.value\n  }\n\n  const setLastName = (e) => {\n    lastName.value = e.target.value\n  }\n\n  return (\n    <div>\n      <input value={firstName} placeholder=\"firstName\" onInput={setFirstName}/>\n      <input value={lastName} placeholder=\"lastName\" onInput={setLastName}/>\n      <div>Hello, {fullName}.</div>\n    </div>\n  )\n}";function i({code:e,instance:n}){return t("container",{block:!0,"block-margin-top-10px":!0},t("tag",{inline:!0},"Example"),t("demo",{block:!0,"block-padding-10px":!0},n),t("pre",null,t("code",{className:"language-jsx"},e)))}i.Style=e=>{e.root.elements.container.style({position:"relative"}),e.root.elements.tag.style({position:"absolute",top:0,left:0,fontSize:12,padding:"2px 8px"}),e.root.elements.demo.style({paddingTop:40,border:"1px #cecece solid",borderRadius:4}),e.root.elements.pre.style({borderRadius:4})};var s=o(i);function c({content:e}){return t("tips",{block:!0,"block-padding-20px":!0,"block-border-width-1px":!0},e)}c.Style=e=>{e.root.elements.tips.style({borderColor:"#ffe564",borderStyle:"solid",borderRadius:4,background:"rgba(255,229,100,0.3)"})};var p=o(c);function m(){const n=e(""),o=l([]);return t("div",null,t("input",{value:n,placeholder:"plan something",onInput:e=>n.value=e.target.value}),t("button",{onClick:()=>{o.push(n.value),n.value=""}},"add"),t("ul",null,(function(){return o.map(((e,n)=>t("li",null,t("span",null,e),t("button",{onClick:()=>{return e=n,void o.splice(e,1);var e}},"x"))))})))}var d="/** @jsx createElement */\nimport {createElement, atom, reactive} from 'axii'\nexport default function Code() {\n  const inputItem = atom('')\n  const items = reactive([])\n\n  const setInputItem = (e) => inputItem.value = e.target.value\n  const addItem = () => {\n    items.push(inputItem.value)\n    inputItem.value = ''\n  }\n\n  const removeItem = (index) => {\n    items.splice(index, 1)\n  }\n\n  return (\n    <div>\n      <input value={inputItem} placeholder=\"plan something\" onInput={setInputItem}/>\n      <button onClick={addItem}>add</button>\n      <ul>\n        {function List() {\n          return items.map((item, i) => (\n            <li>\n              <span>{item}</span>\n              <button onClick={() => removeItem(i)}>x</button>\n            </li>\n          ))\n        }}\n      </ul>\n    </div>\n  )\n}";function f(){return t("todoList",{block:!0,"block-width":"100%"},t("todoItem",{block:!0,"flex-display":!0,"flex-justify-content":"space-between"},t("name",null,"swimming"),t("action",null,"delete")),t("todoItem",{block:!0,"flex-display":!0,"flex-justify-content-space-between":!0},t("name",null,"swimming"),t("action",null,"delete")))}var v='import { createElement } from \'axii\'\nexport default function Code() {\n  return (\n    <todoList block block-width="100%">\n      <todoItem block flex-display flex-justify-content="space-between">\n        <name>swimming</name>\n        <action>delete</action>\n      </todoItem>\n      <todoItem block flex-display flex-justify-content-space-between>\n        <name>swimming</name>\n        <action>delete</action>\n      </todoItem>\n    </todoList>\n  )\n}';function b(){return t("div",{style:{background:"#cecece"}},"box")}function x(){return t("container",null,t("line",{block:!0},t(b,{"layout:inline":!0})),t("line",{block:!0,"block-margin-top-10px":!0},t(b,{"layout:inline":!0,"layout:inline-width-300px":!0})),t("line",{block:!0,"block-margin-top-10px":!0},t(b,{"layout:block":!0})))}var y="import { createElement } from 'axii'\n\nfunction Box() {\n  return <div style={{background: '#cecece'}}>box</div>\n}\n\nexport default function Code() {\n  return (\n    <container>\n      <line block>\n        <Box layout:inline/>\n      </line>\n      <line block block-margin-top-10px>\n        <Box layout:inline layout:inline-width-300px/>\n      </line>\n      <line block block-margin-top-10px>\n        <Box layout:block/>\n      </line>\n    </container>\n  )\n}";function g({onFocus:e,onBlur:n}){return t("container",null,t("line",{block:!0},t("box",{use:"input",onFocus:e,onBlur:n})),t("line",{block:!0},t("textLink",{use:"a",href:"#"},"a link")))}g.Style=e=>{e.root.elements.box.style((({focused:e})=>({borderStyle:"solid",borderWidth:1,outline:"none",borderColor:e.value?"blue":"black"}))),e.root.elements.textLink.match.hover.style({color:"green"})},g.Style.propTypes={focused:a.bool.default((()=>e(!1))),onFocus:a.callback.default((()=>({focused:e})=>e.value=!0)),onBlur:a.callback.default((()=>({focused:e})=>e.value=!1))};var k=o(g),I="/** @jsx createElement */\nimport { createElement, atom, createComponent, propTypes } from 'axii'\n\nfunction Component({ onFocus, onBlur}) {\n  return <container>\n    <line block>\n      <box use=\"input\" onFocus={onFocus} onBlur={onBlur}/>\n    </line>\n    <line block>\n      <textLink use=\"a\" href=\"#\">a link</textLink>\n    </line>\n  </container>\n}\n\nComponent.Style = (fragments) => {\n  fragments.root.elements.box.style(({focused}) => {\n    return {\n      borderStyle: 'solid',\n      borderWidth: 1,\n      outline: 'none',\n      borderColor: focused.value ? 'blue': 'black'\n    }\n  })\n\n  // pseudo class\n  fragments.root.elements.textLink.match.hover.style({\n    color: 'green'\n  })\n}\n\nComponent.Style.propTypes = {\n  focused: propTypes.bool.default(() => atom(false)),\n  onFocus: propTypes.callback.default(() => ({focused}) => focused.value = true),\n  onBlur: propTypes.callback.default(() => ({focused}) => focused.value = false)\n}\n\nexport default createComponent(Component)\n";function h({value:e,onChange:n}){return t("input",{value:e,onInput:n})}h.propTypes={value:a.string.default((()=>e(""))),onChange:a.callback.default((()=>({value:e},n,t)=>{e.value=t.target.value}))};var C="/** @jsx createElement */\nimport { createElement, atom, propTypes } from 'axii'\n\nexport default function Input({ value, onChange}) {\n  return <input value={value} onInput={onChange}/>\n}\n\nInput.propTypes = {\n  value: propTypes.string.default(() => atom('')),\n  onChange: propTypes.callback.default(() => ({value}, props, e) => {\n    value.value = e.target.value\n  })\n}\n";function j(){return t(h,{value:"controlled value"})}var E="/** @jsx createElement */\nimport { createElement } from 'axii'\nimport Input from './Input.jsx'\n\nexport default function ControlledComponent() {\n  const value = 'controlled value'\n  return <Input value={value}/>\n}\n\n";function T(){return t(h,{onChange:()=>{}})}var B="/** @jsx createElement */\nimport { createElement } from 'axii'\nimport Input from './Input.jsx'\n\n\nexport default function InputDemo() {\n  const onChange = () => {\n\n  }\n  return <Input onChange={onChange}/>\n}\n\n";function N(){const n=e("");return t("container",null,t(h,{value:n}),t("div",null,(()=>`value: ${n.value}`)))}var S="/** @jsx createElement */\nimport { createElement, atom } from 'axii'\nimport Input from './Input.jsx'\n\nexport default function InputDemo() {\n  const value = atom('')\n  return (\n    <container>\n      <Input value={value}/>\n      <div>{() => `value: ${value.value}`}</div>\n    </container>\n  )\n\n}\n\n";function F({value:e,onChange:n}){return t("input",{value:e,onInput:n})}function w(e){e.root.elements.input.onFocus(((e,{onFocus:n})=>{n()})),e.root.elements.input.onBlur(((e,{onBlur:n})=>{n()})),e.root.elements.input.style((({focused:e})=>({borderStyle:"solid",borderWidth:1,outline:"none",borderColor:e.value?"blue":"black"})))}F.propTypes={value:a.string.default((()=>e(""))),onChange:a.callback.default((()=>({value:e},n,t)=>{e.value=t.target.value}))},w.propTypes={focused:a.string.default((()=>e(!1))),onFocus:a.callback.default((()=>({focused:e})=>e.value=!0)),onBlur:a.callback.default((()=>({focused:e})=>e.value=!1))};const L=o(F,[w]);function W(){return t(L,null)}var $="/** @jsx createElement */\nimport { createElement, createComponent, atom, propTypes } from 'axii'\n\nfunction Input({ value, onChange}) {\n  return <input value={value} onInput={onChange}/>\n}\n\nInput.propTypes = {\n  value: propTypes.string.default(() => atom('')),\n  onChange: propTypes.callback.default(() => ({value}, props, e) => {\n    value.value = e.target.value\n  })\n}\n\nfunction InputStyle(fragments) {\n  fragments.root.elements.input.onFocus((e, {onFocus}) => {\n    onFocus()\n  })\n  fragments.root.elements.input.onBlur((e, {onBlur}) => {\n    onBlur()\n  })\n  fragments.root.elements.input.style(({focused}) => {\n    return {\n      borderStyle: 'solid',\n      borderWidth: 1,\n      outline: 'none',\n      borderColor: focused.value ? 'blue': 'black'\n    }\n  })\n}\n\nInputStyle.propTypes = {\n  focused: propTypes.string.default(() => atom(false)),\n  onFocus: propTypes.callback.default(() => ({focused}) => focused.value = true),\n  onBlur: propTypes.callback.default(() => ({focused}) => focused.value = false),\n}\n\nexport const InputWithStyle = createComponent(Input, [InputStyle])\n\nexport default function InputDemo() {\n  return <InputWithStyle />\n}\n\n";const R=L.extend((function(e){e.root.elements.input.style((({focused:e})=>({borderColor:e.value?"red":"black"})))}));function U(){return t(R,null)}var M="/** @jsx createElement */\nimport { createElement } from 'axii'\nimport { InputWithStyle } from \"./FeatureBasedInput.jsx\";\n\nconst InputWithCustomStyle = InputWithStyle.extend(function CustomStyle(fragments){\n  fragments.root.elements.input.style(({focused}) => ({\n    borderColor: focused.value ? 'red' : 'black'\n  }))\n})\n\nexport default function InputDemo() {\n  return <InputWithCustomStyle />\n}\n\n";export{u as B,s as C,d as D,M as E,$ as F,N as I,y as L,k as N,p as T,B as U,m as a,r as b,x as c,f as d,v as e,I as f,S as g,T as h,j as i,E as j,h as k,C as l,U as m,W as n};
